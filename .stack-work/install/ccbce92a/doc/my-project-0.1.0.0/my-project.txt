-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on Github at
--   <a>https://github.com/githubuser/my-project#readme</a>
@package my-project
@version 0.1.0.0


-- | cala magia tkwi w funkcjach <tt>cSzyfruj</tt> i <tt>cDeszyfruj</tt>
module Ciag

-- | szyfruje ciag znaków
cSzyfruj :: Functor f => f Char -> Int -> f Char

-- | wyswietla nam wynik naszego szyfrowania
wyswietlSzyfrowanie :: (Functor f, Show (f Char)) => f Char -> Int -> IO ()

-- | deszyfruje ciąg znaków
cDeszyfruj :: Functor f => f Char -> Int -> f Char

-- | wyswietla nam wynik naszego deszyfrowania
wyswietlDeszyfrowanie :: (Functor f, Show (f Char)) => f Char -> Int -> IO ()

-- | próbuje nam pomoc w rozszyfrowaniu
cProbuj :: [Char] -> [Char]

-- | wyswietla nam pomoc w wyszukaniu oryginalu
wyswietlPropozycje :: [Char] -> IO ()


-- | cala magia tkwi w funkcjach <tt>lSzyfruj</tt> i <tt>lDeszyfruj</tt>
module Lista

-- | szyfruje ciag cyfr
lSzyfruj :: Num a => [a] -> [a] -> [a]

-- | wyswietla nam wynik naszego szyfrowania
wyswietlSzyfrowanieLista :: (Num a, Show a) => [a] -> [a] -> IO ()

-- | deszyfruje ciag cyfr
lDeszyfruj :: Num a => [a] -> [a] -> [a]

-- | wyswietla wynik deszyfracji listy
wyswietlDeszyfrowanieLista :: (Num a, Show a) => [a] -> [a] -> IO ()
